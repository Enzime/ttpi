#!/usr/bin/python2.7

from subprocess import check_output, STDOUT, CalledProcessError, call
from sys import argv
from tempfile import mkstemp
import os

def run(func):
    if type(func) != list and type(func) == str:
        func = func.split(' ')

    try:
        out = check_output(func, stderr=STDOUT)[:-1]
    except CalledProcessError as o:
        out = o.output[:-1]
    
    return out

ls = run('tmux ls')

names = [i.split(':')[0]for i in ls.split('\n')]
auto = False

if len(argv) == 1:
    argv = ['tt', '0']
    auto = True

inp = mkstemp('w')
out = mkstemp('w')

if 'windows' in ls:
    if not auto and argv[1] not in names:
        os.write(inp[0], '{}: To be created\n'.format(argv[1]))

    os.write(inp[0], ls)
else:
    os.write(inp[0], '{}: To be created\n'.format(argv[1]))

os.fsync(inp[0])

index = 0
if argv[1] in names:
    index = names.index(argv[1])

p = call(['percol', '--initial-index', str(index), inp[1]], stdout=out[0])

os.close(inp[0])
os.close(out[0])
os.remove(inp[1])

session = open(out[1]).read().split(':')[0]

os.remove(out[1])

if not session:
    print 'no session selected'
    exit()

if session not in names:
    call(['tmux', 'new-session', '-s', session])
else:
    call(['tmux', 'attach-session', '-t', session])
